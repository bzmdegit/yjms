{"remainingRequest":"C:\\Users\\tarena\\Desktop\\ms\\ms_app_00\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\tarena\\Desktop\\ms\\ms_app_00\\src\\components\\home\\Calendar.vue?vue&type=style&index=0&id=6688a3ae&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\tarena\\Desktop\\ms\\ms_app_00\\src\\components\\home\\Calendar.vue","mtime":1574469118206},{"path":"C:\\Users\\tarena\\Desktop\\ms\\ms_app_00\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\tarena\\Desktop\\ms\\ms_app_00\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\tarena\\Desktop\\ms\\ms_app_00\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\tarena\\Desktop\\ms\\ms_app_00\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\tarena\\Desktop\\ms\\ms_app_00\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpkaXYsCnVsLApsaSwKcCwKc3BhbiwKaSwKYiwKYSB7CiAgbWFyZ2luOiAwOwogIHBhZGRpbmc6IDA7CiAgZm9udC1zaXplOiAxNHB4Owp9Ci50aXRsZXsKCWhlaWdodDogMzBweDsKICBwYWRkaW5nLXRvcDogMTVweDsKICBiYWNrZ3JvdW5kOiAjZmZmOwp9Ci50aXRsZSBzcGFuewogIG1hcmdpbi1sZWZ0OiAzNSU7Cn0KLmZsZXggewogIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsKICBkaXNwbGF5OiAtd2Via2l0LWJveDsKICBkaXNwbGF5OiBmbGV4OwogIGJveC1zaXppbmc6IGJvcmRlci1ib3g7Cn0KCi5mbGV4LTEgewogIHdpZHRoOiAxMDAlOwogIC13ZWJraXQtYm94LWZsZXg6IDE7CiAgZmxleDogMTsKfQoKLmNhbGVuZGFyLXR6IHsKICB3aWR0aDogMTAwJTsKICBoZWlnaHQ6IDEwMCU7CiAgYmFja2dyb3VuZDogI2ZmZjsKICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgb3ZlcmZsb3cteTogc2Nyb2xsOwogIHotaW5kZXg6IDk7Cn0KCi5jYWxlbmRhci10ejotd2Via2l0LXNjcm9sbGJhciB7CiAgZGlzcGxheTogbm9uZTsKfQoKLmNhbGVuZGFyLXR6IC50aSB7CiAgZm9udC1zaXplOiAxNnB4OwogIHBhZGRpbmctdG9wOiA0NHB4OwogIG92ZXJmbG93LXk6IGF1dG87Cn0KCi5jYWxlbmRhci10eiAudGk6LXdlYmtpdC1zY3JvbGxiYXIgewogIGRpc3BsYXk6IG5vbmU7Cn0KCi5jYWxlbmRhci1oZWFkZXIgewogIHBvc2l0aW9uOiBmaXhlZDsKICB3aWR0aDogMTAwJTsKICBsZWZ0OiAwOwogIHotaW5kZXg6IDk7CiAgYm94LXNoYWRvdzogMCAycHggMTVweCByZ2JhKDEwMCwgMTAwLCAxMDAsIDAuMSk7Cn0KCi5jYWxlbmRhci1oZWFkZXIgLndlZWstbnVtYmVyIHsKICBiYWNrZ3JvdW5kOiAjZmZmOwogIHdpZHRoOiAxMDAlOwp9CgouY2FsZW5kYXItaGVhZGVyIC53ZWVrLW51bWJlciBzcGFuIHsKICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIGhlaWdodDogNDBweDsKICBsaW5lLWhlaWdodDogNDBweDsKICB3aWR0aDogMTQuMjglOwogIGZvbnQtc2l6ZTogMTZweDsKICBjb2xvcjogIzMzMzsKfQoKLmNhbGVuZGFyLXdyYXBwZXIgLmNhbGVuZGFyLXRpdGxlIHsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgbGluZS1oZWlnaHQ6IDUwcHg7CiAgaGVpZ2h0OiA1MHB4OwogIG1hcmdpbjogMTBweCAwOwp9CgouY2FsZW5kYXItd3JhcHBlciAuY2FsZW5kYXItdGl0bGUgc3BhbiB7CiAgZm9udC1zaXplOiAxMnB4OwogIHBhZGRpbmc6IDAgMjBweDsKfQoKLmNhbGVuZGFyLXdyYXBwZXIgLmNhbGVuZGFyLXRpdGxlIGRpdiB7CiAgY29sb3I6ICMzMzM7CiAgZm9udC1zaXplOiAxNnB4OwogIGZvbnQtd2VpZ2h0OiA0MDA7Cn0KCi5jYWxlbmRhci13cmFwcGVyIC5lYWNoLW1vbnRoIHsKICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgd2lkdGg6IDk4JTsKICBtYXJnaW4tbGVmdDogMSU7CiAgcGFkZGluZy1ib3R0b206IDEwcHg7CiAgZm9udC1zaXplOiAwOwogIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZjRmNGY0Owp9CgouY2FsZW5kYXItd3JhcHBlciAuZWFjaC1tb250aCAuZWFjaC1kYXkgewogIHBvc2l0aW9uOiByZWxhdGl2ZTsKICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIHZlcnRpY2FsLWFsaWduOiBib3R0b207CiAgcGFkZGluZzogMnB4IDA7CiAgd2lkdGg6IDE0LjI4JTsKICBmb250LXNpemU6IDE2cHg7CiAgaGVpZ2h0OiA3MnB4OwogIGNvbG9yOiAjMzMzOwp9CgouY2FsZW5kYXItd3JhcHBlciAuZWFjaC1tb250aCAuZWFjaC1kYXkgZGl2IHsKICBib3JkZXItcmFkaXVzOiA0cHg7CiAgdmVydGljYWwtYWxpZ246IDhweDsKICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgaGVpZ2h0OiAzMnB4OwogIHdpZHRoOiAzMnB4OwogIGxpbmUtaGVpZ2h0OiAzMnB4Owp9CgouY2FsZW5kYXItd3JhcHBlciAuZWFjaC1tb250aCAuZWFjaC1kYXkgLnJlY2VudCB7CiAgZm9udC1zaXplOiAxMnB4OwogIGNvbG9yOiAjNDE1ZmZiOwogIGhlaWdodDogMThweDsKICBsaW5lLWhlaWdodDogMThweDsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgd2lkdGg6IDEwMCU7Cn0KCi5jYWxlbmRhci13cmFwcGVyIC5lYWNoLW1vbnRoIC5lYWNoLWRheSAucHJpY2UgewogIG1hcmdpbi10b3A6IC0ycHg7CiAgaGVpZ2h0OiAxOHB4OwogIGxpbmUtaGVpZ2h0OiAxOHB4OwogIGRpc3BsYXk6IGJsb2NrOwogIGNvbG9yOiAjNjY2OwogIGZvbnQtc2l6ZTogMTJweDsKICB0ZXh0LWFsaWduOiBjZW50ZXI7Cn0KCi5jYWxlbmRhci13cmFwcGVyIC5lYWNoLW1vbnRoIC5lYWNoLWRheS50b2RheSBkaXYgewogIGJhY2tncm91bmQ6ICNlN2U3ZTc7CiAgYm9yZGVyLXJhZGl1czogNHB4Owp9CgouY2FsZW5kYXItd3JhcHBlciAuZWFjaC1tb250aCAuZWFjaC1kYXkuZGlzYWJsZWQgLnJlY2VudCwKLmNhbGVuZGFyLXdyYXBwZXIgLmVhY2gtbW9udGggLmVhY2gtZGF5LmRpc2FibGVkIC5wcmljZSwKLmNhbGVuZGFyLXdyYXBwZXIgLmVhY2gtbW9udGggLmVhY2gtZGF5LmRpc2FibGVkIGRpdiB7CiAgY29sb3I6ICNjY2MgIWltcG9ydGFudDsKfQoKLmNhbGVuZGFyLXdyYXBwZXIgLmVhY2gtbW9udGggLmVhY2gtZGF5LmNsaWNrdGltZSBkaXYgewogIGNvbG9yOiAjZmZmOwogIGJvcmRlci1yYWRpdXM6IDRweDsKfQoK"},{"version":3,"sources":["Calendar.vue"],"names":[],"mappingsfile":"Calendar.vue","sourceRoot":"src/components/home","sourcesContent":["<template>\n  <div class=\"calendar-tz\" id=\"calendarTz\">\n    <div class=\"calendar-header\" id=\"calendarHeader\">\n      <div name=\"top\" class=\"title\">\n        <img @click=\"back()\" width=\"20px\" height=\"20px\" src=\"../../assets/icon-left.png\" alt />\n        <span>选择入住日期</span>\n      </div>\n      <div class=\"week-number\">\n        <span v-for=\"(item,index) in language=='cn' ? weekList : weekListEn\" :key=\"item\">\n          <p :style=\"{color:(index==0||index==weekList.length-1)?getThemeColor:''}\">{{item}}</p>\n        </span>\n      </div>\n    </div>\n    <div class=\"ti\" id=\"ti\" :style=\"{paddingTop:paddindTop+'px',height:height}\">\n      <div\n        class=\"calendar-wrapper\"\n        v-for=\"(item,index) in calendar\"\n        :key=\"index\"\n        v-scrolltop=\"{item:item,date:date||startDate}\"\n      >\n        <div class=\"calendar-title flex\" v-if=\"language=='cn'\" :style=\"{color:getThemeColor}\">\n          <span v-show=\"switchMonth\" @click=\"createClendar('pre')\">上一月</span>\n          <div class=\"flex-1\">{{item.year}} 年 {{item.month}} 月</div>\n          <span v-show=\"switchMonth\" @click=\"createClendar('next')\">下一月</span>\n        </div>\n        <div class=\"calendar-title flex\" :style=\"{color:getThemeColor}\" v-else>\n          <span v-show=\"switchMonth\" @click=\"createClendar('pre')\">Prev month</span>\n          <div class=\"flex-1\">{{monthEn[item.month-1]}} {{item.year}}</div>\n          <span v-show=\"switchMonth\" @click=\"createClendar('next')\">\n            Next\n            month\n          </span>\n        </div>\n        <!--如果普通日期选择-->\n        <ul class=\"each-month\" v-if=\"date||(!date&&!startDate&&!endDate)\">\n          <li\n            class=\"each-day\"\n            v-for=\"(day,idx) in item.dayList\"\n            :key=\"idx\"\n            :class=\"[addClassName(day, item.month, item.year)]\"\n            @click=\"chooseDate($event,day, item.month, item.year)\"\n          >\n            <p\n              class=\"recent\"\n              v-text=\"setTip(day, item.month, item.year)\"\n              :style=\"{color:getThemeColor}\"\n            ></p>\n            <div :style=\"{background:getBackground(day, item.month, item.year)}\">{{!!day?day:''}}</div>\n            <p class=\"price\" v-if=\"priceLists.length>0\" :style=\"{color:themeColor}\">\n              <template\n                v-if=\"setPrice(day, item.month, item.year)>=0\"\n              >{{priceList[setPrice(day, item.month, item.year)].price}}</template>\n            </p>\n          </li>\n        </ul>\n        <!--如果酒店/往返模式-->\n        <ul class=\"each-month\" v-else>\n          <li\n            class=\"each-day\"\n            v-for=\"(day,idx) in item.dayList\"\n            :key=\"idx\"\n            :style=\"{background:addClassName2(day, item.month, item.year)}\"\n            :class=\"[addClassName(day, item.month, item.year),{'clicktime': isCurrent(day, item.month, item.year)}]\"\n            @click=\"chooseDate($event,day, item.month, item.year)\"\n          >\n            <p\n              class=\"recent\"\n              v-text=\"setTip(day, item.month, item.year)\"\n              :style=\"{color:getThemeColor}\"\n            ></p>\n            <div\n              :style=\"{background:isCurrent(day, item.month, item.year)?getThemeColor:''}\"\n            >{{!!day?day:''}}</div>\n            <p class=\"price\" v-if=\"priceLists.length>0\" :style=\"{color:themeColor}\">\n              <template\n                v-if=\"setPrice(day, item.month, item.year)>=0\"\n              >{{priceLists[setPrice(day, item.month, item.year)].price}}</template>\n            </p>\n          </li>\n        </ul>\n      </div>\n    </div>\n    <slot></slot>\n  </div>\n</template>\n\n<script>\nlet { keys, values, entries } = Object;\nexport default {\n  props: {\n    date: {\n      //选择的日期（此属性和startDate,endDate互斥）\n      type: [String, Object],\n      default: \"\"\n    },\n    startDate: {\n      //开始日期\n      type: [String, Object],\n      default: \"\"\n    },\n    endDate: {\n      //结束日期\n      type: [String, Object, Date],\n      default: \"\"\n    },\n    priceList: {\n      //价格日历数组\n      type: [Array, Object],\n      default: function() {\n        return [];\n      }\n    },\n    disabledList: {\n      //设定不允许点击的日期\n      type: [Array, Object],\n      default: function() {\n        return [];\n      }\n    },\n    initMonthCount: {\n      //初始化月的个数\n      type: [String, Number],\n      default: 6\n    },\n    initPreMonthCount: {\n      //初始化date或者startDate之前几个月的日历数据\n      type: [String, Number],\n      default: 0\n    },\n    initPreMonthCount: {\n      //初始化date或者startDate之前几个月的日历数据\n      type: [String, Number],\n      default: \"0\"\n    },\n    mode: {\n      //模式（默认1），1酒店，2飞机往返\n      type: [String, Number],\n      default: 1\n    },\n    switchMonth: {\n      //是否开始切换月份模式\n      type: [String, Boolean],\n      default: false\n    },\n    switchMonth: {\n      //是否开始切换月份模式\n      type: [String, Boolean],\n      default: false\n    },\n    preDisabled: {\n      //小于初始的日期的全部disabled置灰\n      type: [String, Boolean],\n      default: false\n    },\n    allAbled: {\n      //全部日期都可选\n      type: [String, Boolean],\n      default: false\n    },\n    lang: {\n      type: [String],\n      default: \"cn\"\n    },\n    themeColor: {\n      type: [String, Object, Date],\n      default: \"#415FFB\"\n    }\n  },\n  watch: {\n    date() {\n      this.init();\n    },\n    startDate() {\n      this.init();\n    },\n    endDate() {\n      this.init();\n    },\n    priceList() {\n      this.init();\n    },\n    disabledList() {\n      this.init();\n    },\n    initMonthCount() {\n      //初始化月的个数\n      this.init();\n    },\n    initPreMonthCount() {\n      //初始化date或者startDate之前几个月的日历数据\n      this.init();\n    },\n    preDisabled() {\n      //小于初始的日期的全部disabled置灰\n      this.init();\n    },\n    allAbled() {\n      //全部日期都可选\n      this.init();\n    },\n    lang() {\n      this.init();\n    }\n  },\n  data() {\n    return {\n      paddindTop: \"40\",\n      height: \"100vh\",\n      endDates: \"\",\n      startDates: \"\",\n      monthCount: \"\",\n      dates: \"\",\n      priceLists: \"\",\n      currentMonthNum: 0, //当前月的索引，switchMonth=true时使用\n      isDate: false,\n      selectPrice: [], //保存选择的日期所在的价格\n      language: this.lang.toLocaleLowerCase(),\n      weekList: [\"日\", \"一\", \"二\", \"三\", \"四\", \"五\", \"六\"],\n      weekListEn: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n      monthEn: [\n        \"January\",\n        \"February\",\n        \"March\",\n        \"April\",\n        \"May\",\n        \"June\",\n        \"July\",\n        \"August\",\n        \"September\",\n        \"October\",\n        \"November\"\n      ],\n      calendar: [],\n      festival: {\n        \"2019\": {\n          \"2019/6/1\": \"儿童节\",\n          \"2019/6/7\": \"端午\",\n          \"2019/7/1\": \"建党节\",\n          \"2019/8/1\": \"建军节\",\n          \"2019/8/7\": \"七夕\",\n          \"2019/9/10\": \"教师节\",\n          \"2019/9/13\": \"中秋\",\n          \"2019/10/1\": \"国庆\",\n          \"2019/10/28\": \"重阳\",\n          \"2019/10/22\": \"感恩节\",\n          \"2019/12/24\": \"平安夜\",\n          \"2019/12/25\": \"圣诞\",\n          \"2020/1/1\": \"元旦\"\n        },\n        \"2020\": {\n          \"2020/1/1\": \"元旦\",\n          \"2020/1/17\": \"小年\",\n          \"2020/1/24\": \"除夕\",\n          \"2020/1/25\": \"春节\",\n          \"2020/2/8\": \"元宵\",\n          \"2020/2/14\": \"情人节\",\n          \"2020/3/8\": \"妇女节\",\n          \"2020/3/12\": \"植树节\",\n          \"2020/4/1\": \"愚人节\",\n          \"2020/4/4\": \"清明节\",\n          \"2020/5/1\": \"劳动节\",\n          \"2020/5/10\": \"母亲节\",\n          \"2020/6/1\": \"儿童节\",\n          \"2020/6/21\": \"父亲节\",\n          \"2020/6/25\": \"端午节\",\n          \"2020/7/1\": \"建党节\",\n          \"2020/8/1\": \"建军节\",\n          \"2020/8/25\": \"七夕\",\n          \"2020/9/10\": \"教师节\",\n          \"2020/10/1\": \"国庆中秋\",\n          \"2020/10/25\": \"重阳节\",\n          \"2020/11/26\": \"感恩节\",\n          \"2020/12/24\": \"平安夜\",\n          \"2020/12/25\": \"圣诞节\",\n          \"2021/1/1\": \"元旦\"\n        }\n      }\n    };\n  },\n  computed: {\n    getThemeColor() {\n      var hex = this.themeColor;\n      if (hex.length == 4) {\n        hex = `#${hex[1]}${hex[1]}${hex[2]}${hex[2]}${hex[3]}${hex[3]}`;\n      }\n      var str =\n        \"rgba(\" +\n        parseInt(\"0x\" + hex.slice(1, 3)) +\n        \",\" +\n        parseInt(\"0x\" + hex.slice(3, 5)) +\n        \",\" +\n        parseInt(\"0x\" + hex.slice(5, 7)) +\n        \",1)\";\n      return str;\n    },\n    getBetweenColor() {\n      var hex = this.themeColor;\n      if (hex.length == 4) {\n        hex = `#${hex[1]}${hex[1]}${hex[2]}${hex[2]}${hex[3]}${hex[3]}`;\n      }\n      var str =\n        \"rgba(\" +\n        parseInt(\"0x\" + hex.slice(1, 3)) +\n        \",\" +\n        parseInt(\"0x\" + hex.slice(3, 5)) +\n        \",\" +\n        parseInt(\"0x\" + hex.slice(5, 7)) +\n        \",0.1)\";\n      return str;\n    }\n  },\n  mounted() {\n    this.init();\n    // #ifdef H5\n    this.height = \"calc(100vh - 44px)\";\n    // #endif\n    this.paddindTop =\n      document && document.getElementById(\"calendarHeader\").offsetHeight;\n  },\n  directives: {\n    scrolltop: {\n      // 指令的定义\n      inserted: (el, binding, vnode) => {\n        var bindingVal = binding.value;\n        if (!document) return;\n        //if(bindingVal.isPreMonth<=0) return\n        var st = el.getBoundingClientRect().top | 0;\n        var t = document\n          .getElementById(\"calendarHeader\")\n          .getBoundingClientRect().bottom;\n        var date = bindingVal.date.replace(/-/g, \"/\").split(\"/\");\n        if (!bindingVal.date) {\n          date[0] = new Date(new Date().toLocaleDateString()).getFullYear();\n          date[1] = new Date(new Date().toLocaleDateString()).getMonth() + 1;\n        }\n        var ymTemp = bindingVal.item.year + \"\" + bindingVal.item.month;\n        var ym = date[0] + \"\" + parseInt(date[1]);\n        if (ym == ymTemp) {\n          document.getElementById(\"ti\").scrollTop = st - t;\n        }\n      }\n    }\n  },\n  methods: {\n    back() {\n      if (window.history.length <= 1) {\n        this.$router.push({ path: \"/Index\" });\n        return false;\n      } else {\n        this.$router.go(-1);\n      }\n    },\n    init() {\n      //初始化月的个数\n      if (this.initMonthCount < 1) {\n        this.monthCount = 1;\n        console.warn(\"initMonthCount属性设置不能小于1\");\n      } else {\n        this.monthCount = this.initMonthCount;\n      }\n\n      if (this.date) {\n        //disableDate用于addClassName方法preDisabled==true的时候使用\n        this.dates = this.disableDate = new Date(this.date.replace(/-/g, \"/\"));\n        this.isDate = true;\n      }\n      if (this.startDate) {\n        this.startDates = this.disableStartDate = new Date(\n          this.startDate.replace(/-/g, \"/\")\n        );\n      }\n      if (this.endDate) {\n        this.endDates = new Date(this.endDate.replace(/-/g, \"/\"));\n      }\n\n      this.today =\n        new Date(\n          new Date().getFullYear() +\n            \"/\" +\n            (new Date().getMonth() + 1) +\n            \"/\" +\n            new Date().getDate()\n        ) * 1;\n\n      if (this.date && (this.startDate || this.endDate)) {\n        console.warn(\":date属性和 (:startDate,:endDate) 不能同时设置\");\n        this.isDate = true;\n      }\n      if (!this.date && !this.startDate && this.endDate) {\n        //disableStartDate用于addClassName方法preDisabled==true的时候使用\n        this.startDates = this.disableStartDate = new Date(this.today * 1);\n      }\n      if (!this.date && !this.startDate && !this.endDate) {\n        this.dates = new Date(this.today * 1);\n        this.isDate = true;\n      }\n\n      //最后可以选择的日期范围\n      this.lastDate = this.today + this.monthCount * 30 * 24 * 3600 * 1000;\n\n      if (this.date || this.startDate) {\n        this.year = new Date(\n          this.dates * 1 || this.startDates * 1\n        ).getFullYear();\n        this.month =\n          new Date(this.dates * 1 || this.startDates * 1).getMonth() + 1;\n      } else if (this.endDate) {\n        console.warn(\"请设置先startDate\");\n        this.endDates = this.today * 1;\n        this.year = new Date().getFullYear();\n        this.month = new Date().getMonth() + 1;\n      } else {\n        this.year = new Date().getFullYear();\n        this.month = new Date().getMonth() + 1;\n      }\n\n      //查看今年是否设置节假日\n      if (this.language == \"cn\") {\n        this.festivalNew = entries(this.festival).find((item, index) => {\n          return item[index] == this.year;\n        });\n      }\n\n      this.priceLists = this.priceList.map((item, index) => {\n        item.date = item.date.replace(/-/g, \"/\");\n        return item;\n      });\n\n      //如果初始化date或者startDate之前月份数据\n      if (parseInt(this.initPreMonthCount) > 0) {\n        this.initPreMonth();\n      }\n\n      this.createClendar(); //创建日历数据\n    },\n    //初始化date或者startDate之前几个月的日历数据\n    initPreMonth() {\n      let year = this.year;\n      let month = this.month - this.initPreMonthCount;\n      var m = Math.ceil(month / 12);\n      this.monthCount =\n        parseInt(this.monthCount) + parseInt(this.initPreMonthCount);\n\n      if (m > 0) {\n        year += m - 1;\n      } else {\n        year += m - 1;\n      }\n      if (month > 12) {\n        month = month % 12 == 0 ? 12 : month % 12;\n      }\n\n      if (month <= 0) {\n        month = 12 + (month % 12);\n      }\n      this.year = year;\n      this.month = month;\n    },\n    //创建每个月日历数据，传入月份1号前面用null填充\n    createDayList(month, year) {\n      const count = this.getDayNum(month, year),\n        _week = new Date(year + \"/\" + month + \"/1\").getDay();\n      let list = [\n        1,\n        2,\n        3,\n        4,\n        5,\n        6,\n        7,\n        8,\n        9,\n        10,\n        11,\n        12,\n        13,\n        14,\n        15,\n        16,\n        17,\n        18,\n        19,\n        20,\n        21,\n        22,\n        23,\n        24,\n        25,\n        26,\n        27,\n        28\n      ];\n\n      for (let i = 29; i <= count; i++) {\n        list.push(i);\n      }\n      for (let i = 0; i < _week; i++) {\n        list.unshift(null);\n      }\n      return list;\n    },\n    //计算传入月份有多少天\n    getDayNum(month, year) {\n      let dayNum = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\n      if ((year % 4 === 0 && year % 100 !== 0) || year % 400 === 0) {\n        dayNum[1] = 29;\n      }\n      return dayNum[month - 1];\n    },\n    //根据当天和结束日期创建日历数据\n    createClendar(flag = null) {\n      if (this.switchMonth) {\n        this.monthCount = 1;\n        if (flag == \"next\") {\n          this.currentMonthNum += 1;\n        } else if (flag == \"pre\") {\n          this.currentMonthNum -= 1;\n        }\n      }\n\n      for (let i = 0; i < this.monthCount; i++) {\n        let month = this.month + i + this.currentMonthNum,\n          year = this.year,\n          _monthData = {\n            dayList: [],\n            month: \"\",\n            year: \"\"\n          };\n\n        var m = Math.ceil(month / 12);\n        if (m > 0) {\n          year += m - 1;\n        } else {\n          year += m - 1;\n        }\n        if (month > 12) {\n          month = month % 12 == 0 ? 12 : month % 12;\n        }\n\n        if (month <= 0) {\n          month = 12 + (month % 12);\n        }\n\n        _monthData.year = year;\n        _monthData.month = month;\n        _monthData.dayList = this.createDayList(month, year);\n        if (this.switchMonth) {\n          this.calendar = [];\n        }\n        this.calendar.push(_monthData);\n      }\n    },\n    //获取周末的样式\n    getWeekColor(day, month, year) {\n      const _date = new Date(year + \"/\" + month + \"/\" + day);\n      //设置周末的字体样式\n      if (_date.getDay() === 0 || _date.getDay() === 6) {\n        return this.getThemeColor;\n      }\n    },\n    //获取普通日期选中样式背景\n    getBackground(day, month, year) {\n      const _date = new Date(year + \"/\" + month + \"/\" + day);\n      if (_date * 1 === this.dates * 1) {\n        return this.getThemeColor;\n      }\n    },\n    //添加日历样式\n    addClassName(day, month, year) {\n      if (!day) {\n        return;\n      }\n      const _date = new Date(year + \"/\" + month + \"/\" + day);\n      let className = [];\n      if (_date * 1 === this.today) {\n        className.push(\"today\");\n      }\n      if (!this.allAbled || this.allAbled == \"false\") {\n        if (this.initPreMonthCount > 0) {\n          var tempDate = new Date(this.year + \"/\" + this.month + \"/01\") * 1;\n          if (_date * 1 < tempDate || _date * 1 > this.lastDate) {\n            //当天之前和180天之后不可选\n            className.push(\"disabled\");\n          }\n        } else {\n          if (_date * 1 < this.today || _date * 1 > this.lastDate) {\n            //当天之前和180天之后不可选\n            className.push(\"disabled\");\n          }\n        }\n      }\n      //设置不允许操作的日期\n      if (this.disabledList.length > 0) {\n        var notTemp = this.disabledList.map(item => {\n          return new Date(item) * 1;\n        });\n        if (notTemp.includes(new Date(_date) * 1)) {\n          className.push(\" disabled\");\n        }\n      }\n\n      if (_date * 1 === this.dates * 1) {\n        className.push(\" clicktime\");\n      }\n      //preDisabled==true时设置小于disableDate的都disable\n      if (\n        (this.preDisabled || this.preDisabled == \"true\") &&\n        this.isDate &&\n        _date * 1 < this.disableDate * 1\n      ) {\n        className.push(\"disabled\");\n      }\n      if (\n        (this.preDisabled || this.preDisabled == \"true\") &&\n        !this.isDate &&\n        _date * 1 < this.disableStartDate * 1\n      ) {\n        className.push(\"disabled\");\n      }\n\n      return className.join(\" \");\n    },\n    addClassName2(day, month, year) {\n      if (!day || this.date) {\n        return;\n      }\n      const _date = new Date(year + \"/\" + month + \"/\" + day) * 1;\n      if (_date >= this.startDates * 1 && _date <= this.endDates * 1) {\n        return this.getBetweenColor;\n      }\n    },\n    //清除时间 时 分 秒 毫秒\n    resetTime(date) {\n      date.setHours(0);\n      date.setMinutes(0);\n      date.setSeconds(0);\n      date.setMilliseconds(0);\n      return date;\n    },\n    //设置今天，明天，后天\n    setTip(day, month, year) {\n      if (!day) {\n        return;\n      }\n      const td = year + \"/\" + month + \"/\" + day;\n      const _date = new Date(td) * 1;\n      const language = this.language.toLocaleLowerCase();\n\n      let tip;\n\n      //设置节假日\n      if (!!this.festivalNew && language == \"cn\") {\n        // && (_date >= this.today && _date <= this.lastDate) 180范围外是否显示节假日\n        tip = this.festivalNew[1][year + \"/\" + month + \"/\" + day];\n      }\n\n      if (_date == this.today) {\n        tip = language == \"cn\" ? \"今天\" : \"Today\";\n      } else if (_date - this.today === 24 * 3600 * 1000) {\n        tip = language == \"cn\" ? \"明天\" : \"Tmr\";\n      } else if (_date - this.today === 2 * 24 * 3600 * 1000) {\n        tip = language == \"cn\" ? \"后天\" : \"\";\n      }\n\n      if (!this.date && (this.startDate || this.endDate)) {\n        if (_date === this.startDates * 1) {\n          if (this.mode == 2) {\n            if (this.endDates * 1 == 0) {\n              tip = language == \"cn\" ? \"去/返\" : \"Go/Back\";\n            } else {\n              tip = language == \"cn\" ? \"去程\" : \"Go\";\n            }\n          } else {\n            tip = language == \"cn\" ? \"入住\" : \"Into\";\n          }\n        } else if (_date === this.endDates * 1) {\n          if (this.mode == 2) {\n            tip = language == \"cn\" ? \"返程\" : \"Back\";\n          } else {\n            tip = language == \"cn\" ? \"离开\" : \"Leave\";\n          }\n        }\n      }\n\n      return tip;\n    },\n    setPrice(day, month, year) {\n      if (!day) {\n        return;\n      }\n      const td = year + \"/\" + month + \"/\" + day;\n      const _date = new Date(td) * 1;\n      var tip = 0;\n\n      if (this.priceLists.length > 0) {\n        tip = this.priceLists.findIndex((item, index) => {\n          const priceDate = new Date(item.date) * 1;\n          return priceDate == _date;\n        });\n      }\n      if (tip >= 0) {\n        return tip;\n      }\n    },\n    isCurrent(day, month, year) {\n      if (!day) {\n        return false;\n      }\n\n      const _date = new Date(year + \"/\" + month + \"/\" + day) * 1;\n      //设置开始和结束\n      if (_date === this.startDates * 1 || _date === this.endDates * 1) {\n        return true;\n      }\n    },\n    dateFormat(times) {\n      let date = new Date(times);\n      return {\n        year: date.getFullYear(),\n        month:\n          parseInt(date.getMonth() + 1) > 9\n            ? parseInt(date.getMonth() + 1)\n            : \"0\" + parseInt(date.getMonth() + 1),\n        day: date.getDate() > 9 ? date.getDate() : \"0\" + date.getDate(),\n        week: this.weekList[date.getDay()]\n      };\n    },\n    chooseDate(e, day, month, year) {\n      if (!day) {\n        return;\n      }\n\n      const _date = new Date(year + \"/\" + month + \"/\" + day) * 1;\n      if (!this.allAbled || this.allAbled == \"false\") {\n        if (this.initPreMonthCount > 0) {\n          var tempDate = new Date(this.year + \"/\" + this.month + \"/01\") * 1;\n          if (_date * 1 < tempDate || _date * 1 > this.lastDate) {\n            //当天之前和180天之后不可选\n            return;\n          }\n        } else {\n          //超出180天范围之前和之后disable灰色的区域不可点击\n          if (_date < this.today || _date > this.lastDate) {\n            return;\n          }\n        }\n      }\n      //如果设置preDisabled==true，小于disableDate的日期都不能点击\n      if (\n        (this.preDisabled || this.preDisabled == \"true\") &&\n        this.isDate &&\n        _date * 1 < this.disableDate * 1\n      ) {\n        return;\n      }\n      if (\n        (this.preDisabled || this.preDisabled == \"true\") &&\n        !this.isDate &&\n        _date * 1 < this.disableStartDate * 1\n      ) {\n        return;\n      }\n\n      //设置不允许操作的日期\n      if (this.disabledList.length > 0) {\n        var notTemp = this.disabledList.map(item => {\n          return new Date(item) * 1;\n        });\n        if (notTemp.includes(_date)) {\n          return;\n        }\n      }\n\n      if (_date == this.today || this.dates * 1) {\n        this.dates = _date;\n      }\n\n      if (\n        this.startDates * 1 &&\n        this.endDates * 1 &&\n        _date > this.endDates * 1\n      ) {\n        this.startDates = _date;\n        this.endDates = \"\";\n      } else if (this.endDates * 1 && _date > this.endDates) {\n        this.endDates = _date;\n      } else if (_date >= this.startDates * 1 && _date <= this.endDates * 1) {\n        this.startDates = _date;\n        this.endDates = \"\";\n      } else if (_date < this.startDates * 1) {\n        this.startDates = _date;\n        this.endDates = \"\";\n      } else if (_date > this.startDates * 1) {\n        this.endDates = _date;\n      }\n\n      const dateChoose = this.dateFormat(this.dates);\n      const choose = {\n        dateTime: this.dates * 1,\n        date: dateChoose,\n        dateStr:\n          dateChoose.year + \"-\" + dateChoose.month + \"-\" + dateChoose.day,\n        recent: \"\"\n      };\n\n      const startDateChoose = this.dateFormat(this.startDates);\n      const endDateChoose = this.dateFormat(this.endDates);\n      const startDateStr =\n        startDateChoose.year +\n        \"-\" +\n        startDateChoose.month +\n        \"-\" +\n        startDateChoose.day;\n      const endDateStr =\n        endDateChoose.year +\n        \"-\" +\n        endDateChoose.month +\n        \"-\" +\n        endDateChoose.day;\n      const choose2 = {\n        startDateTime: this.startDates,\n        endDateTime: this.endDates,\n        startDate: startDateChoose,\n        endDate: endDateChoose,\n        startDateStr: startDateStr,\n        endDateStr: endDateStr,\n        startRecent: \"\",\n        endRecent: \"\"\n      };\n\n      //返回选择的价格\n      if (this.priceLists.length > 0) {\n        this.clickPrice =\n          this.priceLists[this.setPrice(day, month, year)] || \"\";\n      }\n\n      if (this.isDate) {\n        //普通日期选择模式\n        if (this.clickPrice) {\n          choose.price = this.clickPrice.price;\n        }\n        this.setRecent(_date, choose, \"recent\");\n        this.$emit(\"callback\", choose);\n      } else {\n        choose2.countDays =\n          (this.endDates * 1 - this.startDates * 1) / 86400 / 1000;\n        if (this.priceLists.length > 0) {\n          this.selectPrice.push(this.clickPrice);\n          if (this.selectPrice.length > 2) {\n            this.selectPrice.shift();\n          }\n        }\n        if (this.mode == 2) {\n          //往返模式\n          if (this.startDates && !this.endDates) {\n            //单日往返\n            choose2.endDate = choose2.startDate;\n            choose2.endDateStr = choose2.startDateStr;\n            choose2.endDateTime = choose2.startDateTime;\n            choose2.endRecent = choose2.startRecent;\n\n            this.emitFuc(choose2, true);\n          } else if (this.startDates) {\n            //去程-返程\n            this.emitFuc(choose2);\n          }\n        } else {\n          //酒店模式\n          if (this.startDates && this.endDates) {\n            this.emitFuc(choose2);\n          }\n        }\n      }\n    },\n    //返回recent\n    setRecent(_date, choose, recent) {\n      if (_date == this.today) {\n        choose[recent] = \"今天\";\n      } else if (_date - this.today == 24 * 3600 * 1000) {\n        choose[recent] = \"明天\";\n      } else if (_date - this.today == 2 * 24 * 3600 * 1000) {\n        choose[recent] = \"后天\";\n      }\n    },\n    //\n    emitFuc(choose2, isWf = false) {\n      if (this.priceLists.length > 0) {\n        if (isWf) {\n          choose2.startPrice = choose2.endPrice =\n            this.clickPrice && this.clickPrice.price;\n        } else {\n          choose2.startPrice = this.selectPrice[0].price || \"\";\n          choose2.endPrice = this.selectPrice[1].price || \"\";\n        }\n      }\n      if (isWf) {\n        this.setRecent(this.startDates, choose2, \"startRecent\");\n        this.setRecent(this.startDates, choose2, \"endRecent\");\n      } else {\n        this.setRecent(this.startDates, choose2, \"startRecent\");\n        this.setRecent(this.endDates, choose2, \"endRecent\");\n      }\n\n      this.$emit(\"callback\", choose2);\n    }\n  }\n};\n</script>\n\n<style scoped>\ndiv,\nul,\nli,\np,\nspan,\ni,\nb,\na {\n  margin: 0;\n  padding: 0;\n  font-size: 14px;\n}\n.title{\n\theight: 30px;\n  padding-top: 15px;\n  background: #fff;\n}\n.title span{\n  margin-left: 35%;\n}\n.flex {\n  justify-content: space-between;\n  display: -webkit-box;\n  display: flex;\n  box-sizing: border-box;\n}\n\n.flex-1 {\n  width: 100%;\n  -webkit-box-flex: 1;\n  flex: 1;\n}\n\n.calendar-tz {\n  width: 100%;\n  height: 100%;\n  background: #fff;\n  position: relative;\n  overflow-y: scroll;\n  z-index: 9;\n}\n\n.calendar-tz:-webkit-scrollbar {\n  display: none;\n}\n\n.calendar-tz .ti {\n  font-size: 16px;\n  padding-top: 44px;\n  overflow-y: auto;\n}\n\n.calendar-tz .ti:-webkit-scrollbar {\n  display: none;\n}\n\n.calendar-header {\n  position: fixed;\n  width: 100%;\n  left: 0;\n  z-index: 9;\n  box-shadow: 0 2px 15px rgba(100, 100, 100, 0.1);\n}\n\n.calendar-header .week-number {\n  background: #fff;\n  width: 100%;\n}\n\n.calendar-header .week-number span {\n  display: inline-block;\n  text-align: center;\n  height: 40px;\n  line-height: 40px;\n  width: 14.28%;\n  font-size: 16px;\n  color: #333;\n}\n\n.calendar-wrapper .calendar-title {\n  text-align: center;\n  line-height: 50px;\n  height: 50px;\n  margin: 10px 0;\n}\n\n.calendar-wrapper .calendar-title span {\n  font-size: 12px;\n  padding: 0 20px;\n}\n\n.calendar-wrapper .calendar-title div {\n  color: #333;\n  font-size: 16px;\n  font-weight: 400;\n}\n\n.calendar-wrapper .each-month {\n  display: inline-block;\n  width: 98%;\n  margin-left: 1%;\n  padding-bottom: 10px;\n  font-size: 0;\n  border-bottom: 1px solid #f4f4f4;\n}\n\n.calendar-wrapper .each-month .each-day {\n  position: relative;\n  display: inline-block;\n  text-align: center;\n  vertical-align: bottom;\n  padding: 2px 0;\n  width: 14.28%;\n  font-size: 16px;\n  height: 72px;\n  color: #333;\n}\n\n.calendar-wrapper .each-month .each-day div {\n  border-radius: 4px;\n  vertical-align: 8px;\n  display: inline-block;\n  height: 32px;\n  width: 32px;\n  line-height: 32px;\n}\n\n.calendar-wrapper .each-month .each-day .recent {\n  font-size: 12px;\n  color: #415ffb;\n  height: 18px;\n  line-height: 18px;\n  text-align: center;\n  width: 100%;\n}\n\n.calendar-wrapper .each-month .each-day .price {\n  margin-top: -2px;\n  height: 18px;\n  line-height: 18px;\n  display: block;\n  color: #666;\n  font-size: 12px;\n  text-align: center;\n}\n\n.calendar-wrapper .each-month .each-day.today div {\n  background: #e7e7e7;\n  border-radius: 4px;\n}\n\n.calendar-wrapper .each-month .each-day.disabled .recent,\n.calendar-wrapper .each-month .each-day.disabled .price,\n.calendar-wrapper .each-month .each-day.disabled div {\n  color: #ccc !important;\n}\n\n.calendar-wrapper .each-month .each-day.clicktime div {\n  color: #fff;\n  border-radius: 4px;\n}\n\n</style>\n"]}]}