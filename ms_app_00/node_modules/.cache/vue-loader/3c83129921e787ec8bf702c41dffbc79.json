{"remainingRequest":"C:\\Users\\tarena\\Desktop\\msapp\\ms_app_00\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\tarena\\Desktop\\msapp\\ms_app_00\\src\\components\\home\\Calendar.vue?vue&type=style&index=0&id=6688a3ae&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\tarena\\Desktop\\msapp\\ms_app_00\\src\\components\\home\\Calendar.vue","mtime":1574948219532},{"path":"C:\\Users\\tarena\\Desktop\\msapp\\ms_app_00\\node_modules\\css-loader\\dist\\cjs.js","mtime":1574948188846},{"path":"C:\\Users\\tarena\\Desktop\\msapp\\ms_app_00\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1574948217566},{"path":"C:\\Users\\tarena\\Desktop\\msapp\\ms_app_00\\node_modules\\postcss-loader\\src\\index.js","mtime":1574948208136},{"path":"C:\\Users\\tarena\\Desktop\\msapp\\ms_app_00\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1574948171858},{"path":"C:\\Users\\tarena\\Desktop\\msapp\\ms_app_00\\node_modules\\vue-loader\\lib\\index.js","mtime":1574948217564}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KZGl2LA0KdWwsDQpsaSwNCnAsDQpzcGFuLA0KaSwNCmIsDQphIHsNCiAgbWFyZ2luOiAwOw0KICBwYWRkaW5nOiAwOw0KICBmb250LXNpemU6IDE0cHg7DQp9DQoudGl0bGV7DQoJaGVpZ2h0OiAzMHB4Ow0KICBwYWRkaW5nLXRvcDogMTVweDsNCiAgYmFja2dyb3VuZDogI2ZmZjsNCn0NCi50aXRsZSBzcGFuew0KICBtYXJnaW4tbGVmdDogMzUlOw0KfQ0KLmZsZXggew0KICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47DQogIGRpc3BsYXk6IC13ZWJraXQtYm94Ow0KICBkaXNwbGF5OiBmbGV4Ow0KICBib3gtc2l6aW5nOiBib3JkZXItYm94Ow0KfQ0KDQouZmxleC0xIHsNCiAgd2lkdGg6IDEwMCU7DQogIC13ZWJraXQtYm94LWZsZXg6IDE7DQogIGZsZXg6IDE7DQp9DQoNCi5jYWxlbmRhci10eiB7DQogIHdpZHRoOiAxMDAlOw0KICBoZWlnaHQ6IDEwMCU7DQogIGJhY2tncm91bmQ6ICNmZmY7DQogIHBvc2l0aW9uOiByZWxhdGl2ZTsNCiAgb3ZlcmZsb3cteTogc2Nyb2xsOw0KICB6LWluZGV4OiA5Ow0KfQ0KDQouY2FsZW5kYXItdHo6LXdlYmtpdC1zY3JvbGxiYXIgew0KICBkaXNwbGF5OiBub25lOw0KfQ0KDQouY2FsZW5kYXItdHogLnRpIHsNCiAgZm9udC1zaXplOiAxNnB4Ow0KICBwYWRkaW5nLXRvcDogNDRweDsNCiAgb3ZlcmZsb3cteTogYXV0bzsNCn0NCg0KLmNhbGVuZGFyLXR6IC50aTotd2Via2l0LXNjcm9sbGJhciB7DQogIGRpc3BsYXk6IG5vbmU7DQp9DQoNCi5jYWxlbmRhci1oZWFkZXIgew0KICBwb3NpdGlvbjogZml4ZWQ7DQogIHdpZHRoOiAxMDAlOw0KICBsZWZ0OiAwOw0KICB6LWluZGV4OiA5Ow0KICBib3gtc2hhZG93OiAwIDJweCAxNXB4IHJnYmEoMTAwLCAxMDAsIDEwMCwgMC4xKTsNCn0NCg0KLmNhbGVuZGFyLWhlYWRlciAud2Vlay1udW1iZXIgew0KICBiYWNrZ3JvdW5kOiAjZmZmOw0KICB3aWR0aDogMTAwJTsNCn0NCg0KLmNhbGVuZGFyLWhlYWRlciAud2Vlay1udW1iZXIgc3BhbiB7DQogIGRpc3BsYXk6IGlubGluZS1ibG9jazsNCiAgdGV4dC1hbGlnbjogY2VudGVyOw0KICBoZWlnaHQ6IDQwcHg7DQogIGxpbmUtaGVpZ2h0OiA0MHB4Ow0KICB3aWR0aDogMTQuMjglOw0KICBmb250LXNpemU6IDE2cHg7DQogIGNvbG9yOiAjMzMzOw0KfQ0KDQouY2FsZW5kYXItd3JhcHBlciAuY2FsZW5kYXItdGl0bGUgew0KICB0ZXh0LWFsaWduOiBjZW50ZXI7DQogIGxpbmUtaGVpZ2h0OiA1MHB4Ow0KICBoZWlnaHQ6IDUwcHg7DQogIG1hcmdpbjogMTBweCAwOw0KfQ0KDQouY2FsZW5kYXItd3JhcHBlciAuY2FsZW5kYXItdGl0bGUgc3BhbiB7DQogIGZvbnQtc2l6ZTogMTJweDsNCiAgcGFkZGluZzogMCAyMHB4Ow0KfQ0KDQouY2FsZW5kYXItd3JhcHBlciAuY2FsZW5kYXItdGl0bGUgZGl2IHsNCiAgY29sb3I6ICMzMzM7DQogIGZvbnQtc2l6ZTogMTZweDsNCiAgZm9udC13ZWlnaHQ6IDQwMDsNCn0NCg0KLmNhbGVuZGFyLXdyYXBwZXIgLmVhY2gtbW9udGggew0KICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7DQogIHdpZHRoOiA5OCU7DQogIG1hcmdpbi1sZWZ0OiAxJTsNCiAgcGFkZGluZy1ib3R0b206IDEwcHg7DQogIGZvbnQtc2l6ZTogMDsNCiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNmNGY0ZjQ7DQp9DQoNCi5jYWxlbmRhci13cmFwcGVyIC5lYWNoLW1vbnRoIC5lYWNoLWRheSB7DQogIHBvc2l0aW9uOiByZWxhdGl2ZTsNCiAgZGlzcGxheTogaW5saW5lLWJsb2NrOw0KICB0ZXh0LWFsaWduOiBjZW50ZXI7DQogIHZlcnRpY2FsLWFsaWduOiBib3R0b207DQogIHBhZGRpbmc6IDJweCAwOw0KICB3aWR0aDogMTQuMjglOw0KICBmb250LXNpemU6IDE2cHg7DQogIGhlaWdodDogNzJweDsNCiAgY29sb3I6ICMzMzM7DQp9DQoNCi5jYWxlbmRhci13cmFwcGVyIC5lYWNoLW1vbnRoIC5lYWNoLWRheSBkaXYgew0KICBib3JkZXItcmFkaXVzOiA0cHg7DQogIHZlcnRpY2FsLWFsaWduOiA4cHg7DQogIGRpc3BsYXk6IGlubGluZS1ibG9jazsNCiAgaGVpZ2h0OiAzMnB4Ow0KICB3aWR0aDogMzJweDsNCiAgbGluZS1oZWlnaHQ6IDMycHg7DQp9DQoNCi5jYWxlbmRhci13cmFwcGVyIC5lYWNoLW1vbnRoIC5lYWNoLWRheSAucmVjZW50IHsNCiAgZm9udC1zaXplOiAxMnB4Ow0KICBjb2xvcjogIzQxNWZmYjsNCiAgaGVpZ2h0OiAxOHB4Ow0KICBsaW5lLWhlaWdodDogMThweDsNCiAgdGV4dC1hbGlnbjogY2VudGVyOw0KICB3aWR0aDogMTAwJTsNCn0NCg0KLmNhbGVuZGFyLXdyYXBwZXIgLmVhY2gtbW9udGggLmVhY2gtZGF5IC5wcmljZSB7DQogIG1hcmdpbi10b3A6IC0ycHg7DQogIGhlaWdodDogMThweDsNCiAgbGluZS1oZWlnaHQ6IDE4cHg7DQogIGRpc3BsYXk6IGJsb2NrOw0KICBjb2xvcjogIzY2NjsNCiAgZm9udC1zaXplOiAxMnB4Ow0KICB0ZXh0LWFsaWduOiBjZW50ZXI7DQp9DQoNCi5jYWxlbmRhci13cmFwcGVyIC5lYWNoLW1vbnRoIC5lYWNoLWRheS50b2RheSBkaXYgew0KICBiYWNrZ3JvdW5kOiAjZTdlN2U3Ow0KICBib3JkZXItcmFkaXVzOiA0cHg7DQp9DQoNCi5jYWxlbmRhci13cmFwcGVyIC5lYWNoLW1vbnRoIC5lYWNoLWRheS5kaXNhYmxlZCAucmVjZW50LA0KLmNhbGVuZGFyLXdyYXBwZXIgLmVhY2gtbW9udGggLmVhY2gtZGF5LmRpc2FibGVkIC5wcmljZSwNCi5jYWxlbmRhci13cmFwcGVyIC5lYWNoLW1vbnRoIC5lYWNoLWRheS5kaXNhYmxlZCBkaXYgew0KICBjb2xvcjogI2NjYyAhaW1wb3J0YW50Ow0KfQ0KDQouY2FsZW5kYXItd3JhcHBlciAuZWFjaC1tb250aCAuZWFjaC1kYXkuY2xpY2t0aW1lIGRpdiB7DQogIGNvbG9yOiAjZmZmOw0KICBib3JkZXItcmFkaXVzOiA0cHg7DQp9DQoNCg=="},{"version":3,"sources":["Calendar.vue"],"names":[],"mappingsfile":"Calendar.vue","sourceRoot":"src/components/home","sourcesContent":["<template>\r\n  <div class=\"calendar-tz\" id=\"calendarTz\">\r\n    <div class=\"calendar-header\" id=\"calendarHeader\">\r\n      <div name=\"top\" class=\"title\">\r\n        <img @click=\"back()\" width=\"20px\" height=\"20px\" src=\"../../assets/icon-left.png\" alt />\r\n        <span>选择入住日期</span>\r\n      </div>\r\n      <div class=\"week-number\">\r\n        <span v-for=\"(item,index) in language=='cn' ? weekList : weekListEn\" :key=\"item\">\r\n          <p :style=\"{color:(index==0||index==weekList.length-1)?getThemeColor:''}\">{{item}}</p>\r\n        </span>\r\n      </div>\r\n    </div>\r\n    <div class=\"ti\" id=\"ti\" :style=\"{paddingTop:paddindTop+'px',height:height}\">\r\n      <div\r\n        class=\"calendar-wrapper\"\r\n        v-for=\"(item,index) in calendar\"\r\n        :key=\"index\"\r\n        v-scrolltop=\"{item:item,date:date||startDate}\"\r\n      >\r\n        <div class=\"calendar-title flex\" v-if=\"language=='cn'\" :style=\"{color:getThemeColor}\">\r\n          <span v-show=\"switchMonth\" @click=\"createClendar('pre')\">上一月</span>\r\n          <div class=\"flex-1\">{{item.year}} 年 {{item.month}} 月</div>\r\n          <span v-show=\"switchMonth\" @click=\"createClendar('next')\">下一月</span>\r\n        </div>\r\n        <div class=\"calendar-title flex\" :style=\"{color:getThemeColor}\" v-else>\r\n          <span v-show=\"switchMonth\" @click=\"createClendar('pre')\">Prev month</span>\r\n          <div class=\"flex-1\">{{monthEn[item.month-1]}} {{item.year}}</div>\r\n          <span v-show=\"switchMonth\" @click=\"createClendar('next')\">\r\n            Next\r\n            month\r\n          </span>\r\n        </div>\r\n        <!--如果普通日期选择-->\r\n        <ul class=\"each-month\" v-if=\"date||(!date&&!startDate&&!endDate)\">\r\n          <li\r\n            class=\"each-day\"\r\n            v-for=\"(day,idx) in item.dayList\"\r\n            :key=\"idx\"\r\n            :class=\"[addClassName(day, item.month, item.year)]\"\r\n            @click=\"chooseDate($event,day, item.month, item.year)\"\r\n          >\r\n            <p\r\n              class=\"recent\"\r\n              v-text=\"setTip(day, item.month, item.year)\"\r\n              :style=\"{color:getThemeColor}\"\r\n            ></p>\r\n            <div :style=\"{background:getBackground(day, item.month, item.year)}\">{{!!day?day:''}}</div>\r\n            <p class=\"price\" v-if=\"priceLists.length>0\" :style=\"{color:themeColor}\">\r\n              <template\r\n                v-if=\"setPrice(day, item.month, item.year)>=0\"\r\n              >{{priceList[setPrice(day, item.month, item.year)].price}}</template>\r\n            </p>\r\n          </li>\r\n        </ul>\r\n        <!--如果酒店/往返模式-->\r\n        <ul class=\"each-month\" v-else>\r\n          <li\r\n            class=\"each-day\"\r\n            v-for=\"(day,idx) in item.dayList\"\r\n            :key=\"idx\"\r\n            :style=\"{background:addClassName2(day, item.month, item.year)}\"\r\n            :class=\"[addClassName(day, item.month, item.year),{'clicktime': isCurrent(day, item.month, item.year)}]\"\r\n            @click=\"chooseDate($event,day, item.month, item.year)\"\r\n          >\r\n            <p\r\n              class=\"recent\"\r\n              v-text=\"setTip(day, item.month, item.year)\"\r\n              :style=\"{color:getThemeColor}\"\r\n            ></p>\r\n            <div\r\n              :style=\"{background:isCurrent(day, item.month, item.year)?getThemeColor:''}\"\r\n            >{{!!day?day:''}}</div>\r\n            <p class=\"price\" v-if=\"priceLists.length>0\" :style=\"{color:themeColor}\">\r\n              <template\r\n                v-if=\"setPrice(day, item.month, item.year)>=0\"\r\n              >{{priceLists[setPrice(day, item.month, item.year)].price}}</template>\r\n            </p>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n    <slot></slot>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nlet { keys, values, entries } = Object;\r\nexport default {\r\n  props: {\r\n    date: {\r\n      //选择的日期（此属性和startDate,endDate互斥）\r\n      type: [String, Object],\r\n      default: \"\"\r\n    },\r\n    startDate: {\r\n      //开始日期\r\n      type: [String, Object],\r\n      default: \"\"\r\n    },\r\n    endDate: {\r\n      //结束日期\r\n      type: [String, Object, Date],\r\n      default: \"\"\r\n    },\r\n    priceList: {\r\n      //价格日历数组\r\n      type: [Array, Object],\r\n      default: function() {\r\n        return [];\r\n      }\r\n    },\r\n    disabledList: {\r\n      //设定不允许点击的日期\r\n      type: [Array, Object],\r\n      default: function() {\r\n        return [];\r\n      }\r\n    },\r\n    initMonthCount: {\r\n      //初始化月的个数\r\n      type: [String, Number],\r\n      default: 6\r\n    },\r\n    initPreMonthCount: {\r\n      //初始化date或者startDate之前几个月的日历数据\r\n      type: [String, Number],\r\n      default: 0\r\n    },\r\n    initPreMonthCount: {\r\n      //初始化date或者startDate之前几个月的日历数据\r\n      type: [String, Number],\r\n      default: \"0\"\r\n    },\r\n    mode: {\r\n      //模式（默认1），1酒店，2飞机往返\r\n      type: [String, Number],\r\n      default: 1\r\n    },\r\n    switchMonth: {\r\n      //是否开始切换月份模式\r\n      type: [String, Boolean],\r\n      default: false\r\n    },\r\n    switchMonth: {\r\n      //是否开始切换月份模式\r\n      type: [String, Boolean],\r\n      default: false\r\n    },\r\n    preDisabled: {\r\n      //小于初始的日期的全部disabled置灰\r\n      type: [String, Boolean],\r\n      default: false\r\n    },\r\n    allAbled: {\r\n      //全部日期都可选\r\n      type: [String, Boolean],\r\n      default: false\r\n    },\r\n    lang: {\r\n      type: [String],\r\n      default: \"cn\"\r\n    },\r\n    themeColor: {\r\n      type: [String, Object, Date],\r\n      default: \"#415FFB\"\r\n    }\r\n  },\r\n  watch: {\r\n    date() {\r\n      this.init();\r\n    },\r\n    startDate() {\r\n      this.init();\r\n    },\r\n    endDate() {\r\n      this.init();\r\n    },\r\n    priceList() {\r\n      this.init();\r\n    },\r\n    disabledList() {\r\n      this.init();\r\n    },\r\n    initMonthCount() {\r\n      //初始化月的个数\r\n      this.init();\r\n    },\r\n    initPreMonthCount() {\r\n      //初始化date或者startDate之前几个月的日历数据\r\n      this.init();\r\n    },\r\n    preDisabled() {\r\n      //小于初始的日期的全部disabled置灰\r\n      this.init();\r\n    },\r\n    allAbled() {\r\n      //全部日期都可选\r\n      this.init();\r\n    },\r\n    lang() {\r\n      this.init();\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      paddindTop: \"40\",\r\n      height: \"100vh\",\r\n      endDates: \"\",\r\n      startDates: \"\",\r\n      monthCount: \"\",\r\n      dates: \"\",\r\n      priceLists: \"\",\r\n      currentMonthNum: 0, //当前月的索引，switchMonth=true时使用\r\n      isDate: false,\r\n      selectPrice: [], //保存选择的日期所在的价格\r\n      language: this.lang.toLocaleLowerCase(),\r\n      weekList: [\"日\", \"一\", \"二\", \"三\", \"四\", \"五\", \"六\"],\r\n      weekListEn: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\r\n      monthEn: [\r\n        \"January\",\r\n        \"February\",\r\n        \"March\",\r\n        \"April\",\r\n        \"May\",\r\n        \"June\",\r\n        \"July\",\r\n        \"August\",\r\n        \"September\",\r\n        \"October\",\r\n        \"November\"\r\n      ],\r\n      calendar: [],\r\n      festival: {\r\n        \"2019\": {\r\n          \"2019/6/1\": \"儿童节\",\r\n          \"2019/6/7\": \"端午\",\r\n          \"2019/7/1\": \"建党节\",\r\n          \"2019/8/1\": \"建军节\",\r\n          \"2019/8/7\": \"七夕\",\r\n          \"2019/9/10\": \"教师节\",\r\n          \"2019/9/13\": \"中秋\",\r\n          \"2019/10/1\": \"国庆\",\r\n          \"2019/10/28\": \"重阳\",\r\n          \"2019/10/22\": \"感恩节\",\r\n          \"2019/12/24\": \"平安夜\",\r\n          \"2019/12/25\": \"圣诞\",\r\n          \"2020/1/1\": \"元旦\"\r\n        },\r\n        \"2020\": {\r\n          \"2020/1/1\": \"元旦\",\r\n          \"2020/1/17\": \"小年\",\r\n          \"2020/1/24\": \"除夕\",\r\n          \"2020/1/25\": \"春节\",\r\n          \"2020/2/8\": \"元宵\",\r\n          \"2020/2/14\": \"情人节\",\r\n          \"2020/3/8\": \"妇女节\",\r\n          \"2020/3/12\": \"植树节\",\r\n          \"2020/4/1\": \"愚人节\",\r\n          \"2020/4/4\": \"清明节\",\r\n          \"2020/5/1\": \"劳动节\",\r\n          \"2020/5/10\": \"母亲节\",\r\n          \"2020/6/1\": \"儿童节\",\r\n          \"2020/6/21\": \"父亲节\",\r\n          \"2020/6/25\": \"端午节\",\r\n          \"2020/7/1\": \"建党节\",\r\n          \"2020/8/1\": \"建军节\",\r\n          \"2020/8/25\": \"七夕\",\r\n          \"2020/9/10\": \"教师节\",\r\n          \"2020/10/1\": \"国庆中秋\",\r\n          \"2020/10/25\": \"重阳节\",\r\n          \"2020/11/26\": \"感恩节\",\r\n          \"2020/12/24\": \"平安夜\",\r\n          \"2020/12/25\": \"圣诞节\",\r\n          \"2021/1/1\": \"元旦\"\r\n        }\r\n      }\r\n    };\r\n  },\r\n  computed: {\r\n    getThemeColor() {\r\n      var hex = this.themeColor;\r\n      if (hex.length == 4) {\r\n        hex = `#${hex[1]}${hex[1]}${hex[2]}${hex[2]}${hex[3]}${hex[3]}`;\r\n      }\r\n      var str =\r\n        \"rgba(\" +\r\n        parseInt(\"0x\" + hex.slice(1, 3)) +\r\n        \",\" +\r\n        parseInt(\"0x\" + hex.slice(3, 5)) +\r\n        \",\" +\r\n        parseInt(\"0x\" + hex.slice(5, 7)) +\r\n        \",1)\";\r\n      return str;\r\n    },\r\n    getBetweenColor() {\r\n      var hex = this.themeColor;\r\n      if (hex.length == 4) {\r\n        hex = `#${hex[1]}${hex[1]}${hex[2]}${hex[2]}${hex[3]}${hex[3]}`;\r\n      }\r\n      var str =\r\n        \"rgba(\" +\r\n        parseInt(\"0x\" + hex.slice(1, 3)) +\r\n        \",\" +\r\n        parseInt(\"0x\" + hex.slice(3, 5)) +\r\n        \",\" +\r\n        parseInt(\"0x\" + hex.slice(5, 7)) +\r\n        \",0.1)\";\r\n      return str;\r\n    }\r\n  },\r\n  mounted() {\r\n    this.init();\r\n    // #ifdef H5\r\n    this.height = \"calc(100vh - 44px)\";\r\n    // #endif\r\n    this.paddindTop =\r\n      document && document.getElementById(\"calendarHeader\").offsetHeight;\r\n  },\r\n  directives: {\r\n    scrolltop: {\r\n      // 指令的定义\r\n      inserted: (el, binding, vnode) => {\r\n        var bindingVal = binding.value;\r\n        if (!document) return;\r\n        //if(bindingVal.isPreMonth<=0) return\r\n        var st = el.getBoundingClientRect().top | 0;\r\n        var t = document\r\n          .getElementById(\"calendarHeader\")\r\n          .getBoundingClientRect().bottom;\r\n        var date = bindingVal.date.replace(/-/g, \"/\").split(\"/\");\r\n        if (!bindingVal.date) {\r\n          date[0] = new Date(new Date().toLocaleDateString()).getFullYear();\r\n          date[1] = new Date(new Date().toLocaleDateString()).getMonth() + 1;\r\n        }\r\n        var ymTemp = bindingVal.item.year + \"\" + bindingVal.item.month;\r\n        var ym = date[0] + \"\" + parseInt(date[1]);\r\n        if (ym == ymTemp) {\r\n          document.getElementById(\"ti\").scrollTop = st - t;\r\n        }\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    back() {\r\n      if (window.history.length <= 1) {\r\n        this.$router.push({ path: \"/Index\" });\r\n        return false;\r\n      } else {\r\n        this.$router.go(-1);\r\n      }\r\n    },\r\n    init() {\r\n      //初始化月的个数\r\n      if (this.initMonthCount < 1) {\r\n        this.monthCount = 1;\r\n        console.warn(\"initMonthCount属性设置不能小于1\");\r\n      } else {\r\n        this.monthCount = this.initMonthCount;\r\n      }\r\n\r\n      if (this.date) {\r\n        //disableDate用于addClassName方法preDisabled==true的时候使用\r\n        this.dates = this.disableDate = new Date(this.date.replace(/-/g, \"/\"));\r\n        this.isDate = true;\r\n      }\r\n      if (this.startDate) {\r\n        this.startDates = this.disableStartDate = new Date(\r\n          this.startDate.replace(/-/g, \"/\")\r\n        );\r\n      }\r\n      if (this.endDate) {\r\n        this.endDates = new Date(this.endDate.replace(/-/g, \"/\"));\r\n      }\r\n\r\n      this.today =\r\n        new Date(\r\n          new Date().getFullYear() +\r\n            \"/\" +\r\n            (new Date().getMonth() + 1) +\r\n            \"/\" +\r\n            new Date().getDate()\r\n        ) * 1;\r\n\r\n      if (this.date && (this.startDate || this.endDate)) {\r\n        console.warn(\":date属性和 (:startDate,:endDate) 不能同时设置\");\r\n        this.isDate = true;\r\n      }\r\n      if (!this.date && !this.startDate && this.endDate) {\r\n        //disableStartDate用于addClassName方法preDisabled==true的时候使用\r\n        this.startDates = this.disableStartDate = new Date(this.today * 1);\r\n      }\r\n      if (!this.date && !this.startDate && !this.endDate) {\r\n        this.dates = new Date(this.today * 1);\r\n        this.isDate = true;\r\n      }\r\n\r\n      //最后可以选择的日期范围\r\n      this.lastDate = this.today + this.monthCount * 30 * 24 * 3600 * 1000;\r\n\r\n      if (this.date || this.startDate) {\r\n        this.year = new Date(\r\n          this.dates * 1 || this.startDates * 1\r\n        ).getFullYear();\r\n        this.month =\r\n          new Date(this.dates * 1 || this.startDates * 1).getMonth() + 1;\r\n      } else if (this.endDate) {\r\n        console.warn(\"请设置先startDate\");\r\n        this.endDates = this.today * 1;\r\n        this.year = new Date().getFullYear();\r\n        this.month = new Date().getMonth() + 1;\r\n      } else {\r\n        this.year = new Date().getFullYear();\r\n        this.month = new Date().getMonth() + 1;\r\n      }\r\n\r\n      //查看今年是否设置节假日\r\n      if (this.language == \"cn\") {\r\n        this.festivalNew = entries(this.festival).find((item, index) => {\r\n          return item[index] == this.year;\r\n        });\r\n      }\r\n\r\n      this.priceLists = this.priceList.map((item, index) => {\r\n        item.date = item.date.replace(/-/g, \"/\");\r\n        return item;\r\n      });\r\n\r\n      //如果初始化date或者startDate之前月份数据\r\n      if (parseInt(this.initPreMonthCount) > 0) {\r\n        this.initPreMonth();\r\n      }\r\n\r\n      this.createClendar(); //创建日历数据\r\n    },\r\n    //初始化date或者startDate之前几个月的日历数据\r\n    initPreMonth() {\r\n      let year = this.year;\r\n      let month = this.month - this.initPreMonthCount;\r\n      var m = Math.ceil(month / 12);\r\n      this.monthCount =\r\n        parseInt(this.monthCount) + parseInt(this.initPreMonthCount);\r\n\r\n      if (m > 0) {\r\n        year += m - 1;\r\n      } else {\r\n        year += m - 1;\r\n      }\r\n      if (month > 12) {\r\n        month = month % 12 == 0 ? 12 : month % 12;\r\n      }\r\n\r\n      if (month <= 0) {\r\n        month = 12 + (month % 12);\r\n      }\r\n      this.year = year;\r\n      this.month = month;\r\n    },\r\n    //创建每个月日历数据，传入月份1号前面用null填充\r\n    createDayList(month, year) {\r\n      const count = this.getDayNum(month, year),\r\n        _week = new Date(year + \"/\" + month + \"/1\").getDay();\r\n      let list = [\r\n        1,\r\n        2,\r\n        3,\r\n        4,\r\n        5,\r\n        6,\r\n        7,\r\n        8,\r\n        9,\r\n        10,\r\n        11,\r\n        12,\r\n        13,\r\n        14,\r\n        15,\r\n        16,\r\n        17,\r\n        18,\r\n        19,\r\n        20,\r\n        21,\r\n        22,\r\n        23,\r\n        24,\r\n        25,\r\n        26,\r\n        27,\r\n        28\r\n      ];\r\n\r\n      for (let i = 29; i <= count; i++) {\r\n        list.push(i);\r\n      }\r\n      for (let i = 0; i < _week; i++) {\r\n        list.unshift(null);\r\n      }\r\n      return list;\r\n    },\r\n    //计算传入月份有多少天\r\n    getDayNum(month, year) {\r\n      let dayNum = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n\r\n      if ((year % 4 === 0 && year % 100 !== 0) || year % 400 === 0) {\r\n        dayNum[1] = 29;\r\n      }\r\n      return dayNum[month - 1];\r\n    },\r\n    //根据当天和结束日期创建日历数据\r\n    createClendar(flag = null) {\r\n      if (this.switchMonth) {\r\n        this.monthCount = 1;\r\n        if (flag == \"next\") {\r\n          this.currentMonthNum += 1;\r\n        } else if (flag == \"pre\") {\r\n          this.currentMonthNum -= 1;\r\n        }\r\n      }\r\n\r\n      for (let i = 0; i < this.monthCount; i++) {\r\n        let month = this.month + i + this.currentMonthNum,\r\n          year = this.year,\r\n          _monthData = {\r\n            dayList: [],\r\n            month: \"\",\r\n            year: \"\"\r\n          };\r\n\r\n        var m = Math.ceil(month / 12);\r\n        if (m > 0) {\r\n          year += m - 1;\r\n        } else {\r\n          year += m - 1;\r\n        }\r\n        if (month > 12) {\r\n          month = month % 12 == 0 ? 12 : month % 12;\r\n        }\r\n\r\n        if (month <= 0) {\r\n          month = 12 + (month % 12);\r\n        }\r\n\r\n        _monthData.year = year;\r\n        _monthData.month = month;\r\n        _monthData.dayList = this.createDayList(month, year);\r\n        if (this.switchMonth) {\r\n          this.calendar = [];\r\n        }\r\n        this.calendar.push(_monthData);\r\n      }\r\n    },\r\n    //获取周末的样式\r\n    getWeekColor(day, month, year) {\r\n      const _date = new Date(year + \"/\" + month + \"/\" + day);\r\n      //设置周末的字体样式\r\n      if (_date.getDay() === 0 || _date.getDay() === 6) {\r\n        return this.getThemeColor;\r\n      }\r\n    },\r\n    //获取普通日期选中样式背景\r\n    getBackground(day, month, year) {\r\n      const _date = new Date(year + \"/\" + month + \"/\" + day);\r\n      if (_date * 1 === this.dates * 1) {\r\n        return this.getThemeColor;\r\n      }\r\n    },\r\n    //添加日历样式\r\n    addClassName(day, month, year) {\r\n      if (!day) {\r\n        return;\r\n      }\r\n      const _date = new Date(year + \"/\" + month + \"/\" + day);\r\n      let className = [];\r\n      if (_date * 1 === this.today) {\r\n        className.push(\"today\");\r\n      }\r\n      if (!this.allAbled || this.allAbled == \"false\") {\r\n        if (this.initPreMonthCount > 0) {\r\n          var tempDate = new Date(this.year + \"/\" + this.month + \"/01\") * 1;\r\n          if (_date * 1 < tempDate || _date * 1 > this.lastDate) {\r\n            //当天之前和180天之后不可选\r\n            className.push(\"disabled\");\r\n          }\r\n        } else {\r\n          if (_date * 1 < this.today || _date * 1 > this.lastDate) {\r\n            //当天之前和180天之后不可选\r\n            className.push(\"disabled\");\r\n          }\r\n        }\r\n      }\r\n      //设置不允许操作的日期\r\n      if (this.disabledList.length > 0) {\r\n        var notTemp = this.disabledList.map(item => {\r\n          return new Date(item) * 1;\r\n        });\r\n        if (notTemp.includes(new Date(_date) * 1)) {\r\n          className.push(\" disabled\");\r\n        }\r\n      }\r\n\r\n      if (_date * 1 === this.dates * 1) {\r\n        className.push(\" clicktime\");\r\n      }\r\n      //preDisabled==true时设置小于disableDate的都disable\r\n      if (\r\n        (this.preDisabled || this.preDisabled == \"true\") &&\r\n        this.isDate &&\r\n        _date * 1 < this.disableDate * 1\r\n      ) {\r\n        className.push(\"disabled\");\r\n      }\r\n      if (\r\n        (this.preDisabled || this.preDisabled == \"true\") &&\r\n        !this.isDate &&\r\n        _date * 1 < this.disableStartDate * 1\r\n      ) {\r\n        className.push(\"disabled\");\r\n      }\r\n\r\n      return className.join(\" \");\r\n    },\r\n    addClassName2(day, month, year) {\r\n      if (!day || this.date) {\r\n        return;\r\n      }\r\n      const _date = new Date(year + \"/\" + month + \"/\" + day) * 1;\r\n      if (_date >= this.startDates * 1 && _date <= this.endDates * 1) {\r\n        return this.getBetweenColor;\r\n      }\r\n    },\r\n    //清除时间 时 分 秒 毫秒\r\n    resetTime(date) {\r\n      date.setHours(0);\r\n      date.setMinutes(0);\r\n      date.setSeconds(0);\r\n      date.setMilliseconds(0);\r\n      return date;\r\n    },\r\n    //设置今天，明天，后天\r\n    setTip(day, month, year) {\r\n      if (!day) {\r\n        return;\r\n      }\r\n      const td = year + \"/\" + month + \"/\" + day;\r\n      const _date = new Date(td) * 1;\r\n      const language = this.language.toLocaleLowerCase();\r\n\r\n      let tip;\r\n\r\n      //设置节假日\r\n      if (!!this.festivalNew && language == \"cn\") {\r\n        // && (_date >= this.today && _date <= this.lastDate) 180范围外是否显示节假日\r\n        tip = this.festivalNew[1][year + \"/\" + month + \"/\" + day];\r\n      }\r\n\r\n      if (_date == this.today) {\r\n        tip = language == \"cn\" ? \"今天\" : \"Today\";\r\n      } else if (_date - this.today === 24 * 3600 * 1000) {\r\n        tip = language == \"cn\" ? \"明天\" : \"Tmr\";\r\n      } else if (_date - this.today === 2 * 24 * 3600 * 1000) {\r\n        tip = language == \"cn\" ? \"后天\" : \"\";\r\n      }\r\n\r\n      if (!this.date && (this.startDate || this.endDate)) {\r\n        if (_date === this.startDates * 1) {\r\n          if (this.mode == 2) {\r\n            if (this.endDates * 1 == 0) {\r\n              tip = language == \"cn\" ? \"去/返\" : \"Go/Back\";\r\n            } else {\r\n              tip = language == \"cn\" ? \"去程\" : \"Go\";\r\n            }\r\n          } else {\r\n            tip = language == \"cn\" ? \"入住\" : \"Into\";\r\n          }\r\n        } else if (_date === this.endDates * 1) {\r\n          if (this.mode == 2) {\r\n            tip = language == \"cn\" ? \"返程\" : \"Back\";\r\n          } else {\r\n            tip = language == \"cn\" ? \"离开\" : \"Leave\";\r\n          }\r\n        }\r\n      }\r\n\r\n      return tip;\r\n    },\r\n    setPrice(day, month, year) {\r\n      if (!day) {\r\n        return;\r\n      }\r\n      const td = year + \"/\" + month + \"/\" + day;\r\n      const _date = new Date(td) * 1;\r\n      var tip = 0;\r\n\r\n      if (this.priceLists.length > 0) {\r\n        tip = this.priceLists.findIndex((item, index) => {\r\n          const priceDate = new Date(item.date) * 1;\r\n          return priceDate == _date;\r\n        });\r\n      }\r\n      if (tip >= 0) {\r\n        return tip;\r\n      }\r\n    },\r\n    isCurrent(day, month, year) {\r\n      if (!day) {\r\n        return false;\r\n      }\r\n\r\n      const _date = new Date(year + \"/\" + month + \"/\" + day) * 1;\r\n      //设置开始和结束\r\n      if (_date === this.startDates * 1 || _date === this.endDates * 1) {\r\n        return true;\r\n      }\r\n    },\r\n    dateFormat(times) {\r\n      let date = new Date(times);\r\n      return {\r\n        year: date.getFullYear(),\r\n        month:\r\n          parseInt(date.getMonth() + 1) > 9\r\n            ? parseInt(date.getMonth() + 1)\r\n            : \"0\" + parseInt(date.getMonth() + 1),\r\n        day: date.getDate() > 9 ? date.getDate() : \"0\" + date.getDate(),\r\n        week: this.weekList[date.getDay()]\r\n      };\r\n    },\r\n    chooseDate(e, day, month, year) {\r\n      if (!day) {\r\n        return;\r\n      }\r\n\r\n      const _date = new Date(year + \"/\" + month + \"/\" + day) * 1;\r\n      if (!this.allAbled || this.allAbled == \"false\") {\r\n        if (this.initPreMonthCount > 0) {\r\n          var tempDate = new Date(this.year + \"/\" + this.month + \"/01\") * 1;\r\n          if (_date * 1 < tempDate || _date * 1 > this.lastDate) {\r\n            //当天之前和180天之后不可选\r\n            return;\r\n          }\r\n        } else {\r\n          //超出180天范围之前和之后disable灰色的区域不可点击\r\n          if (_date < this.today || _date > this.lastDate) {\r\n            return;\r\n          }\r\n        }\r\n      }\r\n      //如果设置preDisabled==true，小于disableDate的日期都不能点击\r\n      if (\r\n        (this.preDisabled || this.preDisabled == \"true\") &&\r\n        this.isDate &&\r\n        _date * 1 < this.disableDate * 1\r\n      ) {\r\n        return;\r\n      }\r\n      if (\r\n        (this.preDisabled || this.preDisabled == \"true\") &&\r\n        !this.isDate &&\r\n        _date * 1 < this.disableStartDate * 1\r\n      ) {\r\n        return;\r\n      }\r\n\r\n      //设置不允许操作的日期\r\n      if (this.disabledList.length > 0) {\r\n        var notTemp = this.disabledList.map(item => {\r\n          return new Date(item) * 1;\r\n        });\r\n        if (notTemp.includes(_date)) {\r\n          return;\r\n        }\r\n      }\r\n\r\n      if (_date == this.today || this.dates * 1) {\r\n        this.dates = _date;\r\n      }\r\n\r\n      if (\r\n        this.startDates * 1 &&\r\n        this.endDates * 1 &&\r\n        _date > this.endDates * 1\r\n      ) {\r\n        this.startDates = _date;\r\n        this.endDates = \"\";\r\n      } else if (this.endDates * 1 && _date > this.endDates) {\r\n        this.endDates = _date;\r\n      } else if (_date >= this.startDates * 1 && _date <= this.endDates * 1) {\r\n        this.startDates = _date;\r\n        this.endDates = \"\";\r\n      } else if (_date < this.startDates * 1) {\r\n        this.startDates = _date;\r\n        this.endDates = \"\";\r\n      } else if (_date > this.startDates * 1) {\r\n        this.endDates = _date;\r\n      }\r\n\r\n      const dateChoose = this.dateFormat(this.dates);\r\n      const choose = {\r\n        dateTime: this.dates * 1,\r\n        date: dateChoose,\r\n        dateStr:\r\n          dateChoose.year + \"-\" + dateChoose.month + \"-\" + dateChoose.day,\r\n        recent: \"\"\r\n      };\r\n\r\n      const startDateChoose = this.dateFormat(this.startDates);\r\n      const endDateChoose = this.dateFormat(this.endDates);\r\n      const startDateStr =\r\n        startDateChoose.year +\r\n        \"-\" +\r\n        startDateChoose.month +\r\n        \"-\" +\r\n        startDateChoose.day;\r\n      const endDateStr =\r\n        endDateChoose.year +\r\n        \"-\" +\r\n        endDateChoose.month +\r\n        \"-\" +\r\n        endDateChoose.day;\r\n      const choose2 = {\r\n        startDateTime: this.startDates,\r\n        endDateTime: this.endDates,\r\n        startDate: startDateChoose,\r\n        endDate: endDateChoose,\r\n        startDateStr: startDateStr,\r\n        endDateStr: endDateStr,\r\n        startRecent: \"\",\r\n        endRecent: \"\"\r\n      };\r\n\r\n      //返回选择的价格\r\n      if (this.priceLists.length > 0) {\r\n        this.clickPrice =\r\n          this.priceLists[this.setPrice(day, month, year)] || \"\";\r\n      }\r\n\r\n      if (this.isDate) {\r\n        //普通日期选择模式\r\n        if (this.clickPrice) {\r\n          choose.price = this.clickPrice.price;\r\n        }\r\n        this.setRecent(_date, choose, \"recent\");\r\n        this.$emit(\"callback\", choose);\r\n      } else {\r\n        choose2.countDays =\r\n          (this.endDates * 1 - this.startDates * 1) / 86400 / 1000;\r\n        if (this.priceLists.length > 0) {\r\n          this.selectPrice.push(this.clickPrice);\r\n          if (this.selectPrice.length > 2) {\r\n            this.selectPrice.shift();\r\n          }\r\n        }\r\n        if (this.mode == 2) {\r\n          //往返模式\r\n          if (this.startDates && !this.endDates) {\r\n            //单日往返\r\n            choose2.endDate = choose2.startDate;\r\n            choose2.endDateStr = choose2.startDateStr;\r\n            choose2.endDateTime = choose2.startDateTime;\r\n            choose2.endRecent = choose2.startRecent;\r\n\r\n            this.emitFuc(choose2, true);\r\n          } else if (this.startDates) {\r\n            //去程-返程\r\n            this.emitFuc(choose2);\r\n          }\r\n        } else {\r\n          //酒店模式\r\n          if (this.startDates && this.endDates) {\r\n            this.emitFuc(choose2);\r\n          }\r\n        }\r\n      }\r\n    },\r\n    //返回recent\r\n    setRecent(_date, choose, recent) {\r\n      if (_date == this.today) {\r\n        choose[recent] = \"今天\";\r\n      } else if (_date - this.today == 24 * 3600 * 1000) {\r\n        choose[recent] = \"明天\";\r\n      } else if (_date - this.today == 2 * 24 * 3600 * 1000) {\r\n        choose[recent] = \"后天\";\r\n      }\r\n    },\r\n    //\r\n    emitFuc(choose2, isWf = false) {\r\n      if (this.priceLists.length > 0) {\r\n        if (isWf) {\r\n          choose2.startPrice = choose2.endPrice =\r\n            this.clickPrice && this.clickPrice.price;\r\n        } else {\r\n          choose2.startPrice = this.selectPrice[0].price || \"\";\r\n          choose2.endPrice = this.selectPrice[1].price || \"\";\r\n        }\r\n      }\r\n      if (isWf) {\r\n        this.setRecent(this.startDates, choose2, \"startRecent\");\r\n        this.setRecent(this.startDates, choose2, \"endRecent\");\r\n      } else {\r\n        this.setRecent(this.startDates, choose2, \"startRecent\");\r\n        this.setRecent(this.endDates, choose2, \"endRecent\");\r\n      }\r\n\r\n      this.$emit(\"callback\", choose2);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\ndiv,\r\nul,\r\nli,\r\np,\r\nspan,\r\ni,\r\nb,\r\na {\r\n  margin: 0;\r\n  padding: 0;\r\n  font-size: 14px;\r\n}\r\n.title{\r\n\theight: 30px;\r\n  padding-top: 15px;\r\n  background: #fff;\r\n}\r\n.title span{\r\n  margin-left: 35%;\r\n}\r\n.flex {\r\n  justify-content: space-between;\r\n  display: -webkit-box;\r\n  display: flex;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.flex-1 {\r\n  width: 100%;\r\n  -webkit-box-flex: 1;\r\n  flex: 1;\r\n}\r\n\r\n.calendar-tz {\r\n  width: 100%;\r\n  height: 100%;\r\n  background: #fff;\r\n  position: relative;\r\n  overflow-y: scroll;\r\n  z-index: 9;\r\n}\r\n\r\n.calendar-tz:-webkit-scrollbar {\r\n  display: none;\r\n}\r\n\r\n.calendar-tz .ti {\r\n  font-size: 16px;\r\n  padding-top: 44px;\r\n  overflow-y: auto;\r\n}\r\n\r\n.calendar-tz .ti:-webkit-scrollbar {\r\n  display: none;\r\n}\r\n\r\n.calendar-header {\r\n  position: fixed;\r\n  width: 100%;\r\n  left: 0;\r\n  z-index: 9;\r\n  box-shadow: 0 2px 15px rgba(100, 100, 100, 0.1);\r\n}\r\n\r\n.calendar-header .week-number {\r\n  background: #fff;\r\n  width: 100%;\r\n}\r\n\r\n.calendar-header .week-number span {\r\n  display: inline-block;\r\n  text-align: center;\r\n  height: 40px;\r\n  line-height: 40px;\r\n  width: 14.28%;\r\n  font-size: 16px;\r\n  color: #333;\r\n}\r\n\r\n.calendar-wrapper .calendar-title {\r\n  text-align: center;\r\n  line-height: 50px;\r\n  height: 50px;\r\n  margin: 10px 0;\r\n}\r\n\r\n.calendar-wrapper .calendar-title span {\r\n  font-size: 12px;\r\n  padding: 0 20px;\r\n}\r\n\r\n.calendar-wrapper .calendar-title div {\r\n  color: #333;\r\n  font-size: 16px;\r\n  font-weight: 400;\r\n}\r\n\r\n.calendar-wrapper .each-month {\r\n  display: inline-block;\r\n  width: 98%;\r\n  margin-left: 1%;\r\n  padding-bottom: 10px;\r\n  font-size: 0;\r\n  border-bottom: 1px solid #f4f4f4;\r\n}\r\n\r\n.calendar-wrapper .each-month .each-day {\r\n  position: relative;\r\n  display: inline-block;\r\n  text-align: center;\r\n  vertical-align: bottom;\r\n  padding: 2px 0;\r\n  width: 14.28%;\r\n  font-size: 16px;\r\n  height: 72px;\r\n  color: #333;\r\n}\r\n\r\n.calendar-wrapper .each-month .each-day div {\r\n  border-radius: 4px;\r\n  vertical-align: 8px;\r\n  display: inline-block;\r\n  height: 32px;\r\n  width: 32px;\r\n  line-height: 32px;\r\n}\r\n\r\n.calendar-wrapper .each-month .each-day .recent {\r\n  font-size: 12px;\r\n  color: #415ffb;\r\n  height: 18px;\r\n  line-height: 18px;\r\n  text-align: center;\r\n  width: 100%;\r\n}\r\n\r\n.calendar-wrapper .each-month .each-day .price {\r\n  margin-top: -2px;\r\n  height: 18px;\r\n  line-height: 18px;\r\n  display: block;\r\n  color: #666;\r\n  font-size: 12px;\r\n  text-align: center;\r\n}\r\n\r\n.calendar-wrapper .each-month .each-day.today div {\r\n  background: #e7e7e7;\r\n  border-radius: 4px;\r\n}\r\n\r\n.calendar-wrapper .each-month .each-day.disabled .recent,\r\n.calendar-wrapper .each-month .each-day.disabled .price,\r\n.calendar-wrapper .each-month .each-day.disabled div {\r\n  color: #ccc !important;\r\n}\r\n\r\n.calendar-wrapper .each-month .each-day.clicktime div {\r\n  color: #fff;\r\n  border-radius: 4px;\r\n}\r\n\r\n</style>\r\n"]}]}